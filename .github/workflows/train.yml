name: Train Model

on:
  push:
    branches:
      - main
      # force training for now
      # paths:
      #   - 'model_train.py'

jobs:
  train-evaluate:
    runs-on: gpu-p100
    env:
      DATASET_EXISTS: ''

    steps:
      - name: Manage Dataset Volume and Download
        id: manage_dataset
        run: |
          docker run -d --rm --name tensorflow_container \
            -v food11_data:/tmp/content/Food-11 \
            -w /workspace \
            tensorflow/tensorflow:latest-gpu tail -f /dev/null

          if docker exec tensorflow_container bash -c "[ -d '/tmp/content/Food-11' ] && [ \"\$(ls -A /tmp/content/Food-11)\" ]"; then
            echo "Volume 'food11_data' already contains data. Skipping download."
          else
            echo "Volume 'food11_data' is empty. Downloading dataset."

            docker exec tensorflow_container bash -c "
              set -e;
              echo 'Downloading and setting up dataset...';
              mkdir -p /tmp/content/Food-11 && \
              apt-get update && \
              pip3 install gdown && \
              gdown https://drive.google.com/uc?id=1dt3CD3ICdLbTf80sNJ25TPBDKu_qyCnq -O /tmp/content/Food-11/dataset.zip && \
              unzip /tmp/content/Food-11/dataset.zip -d /tmp/content/Food-11 && \
              echo 'Dataset downloaded and unzipped. Files included:' && \
              ls -la /tmp/content/Food-11;
            "
          fi

          docker exec tensorflow_container bash -c "
            apt-get update && apt-get install -y git;
            if [ -d 'workspace/src/image-classification-continuous-x' ]; then
              echo 'Repository already exists. Updating...';
              cd /workspace/image-classification-continuous-x && git pull origin main;
            else
              echo 'Cloning repository...';
              git clone https://github.com/tin2294/image-classification-continuous-x.git workspace/src/image-classification-continuous-x;
            fi
          "

      - name: Install Dependencies
        run: |
          docker exec tensorflow_container pip install -r workspace/src/image-classification-continuous-x/requirements_docker.txt

      - name: Run Training Script
        run: |
          docker exec tensorflow_container python workspace/src/image-classification-continuous-x/model_train.py
        env:
          STORAGE_PATH: /home/cc/models

      - name: Print env variables
        run: |
          echo "Printing environment variables:"
          printenv

      - name: Stop Container
        run: |
          docker stop tensorflow_container

      - name: Set Accuracy as Environment Variable
        run: |
          accuracy=$(python -c "import workspace.src.image_classification_continuous_x.model_train as train; print(train.get_accuracy())")
          echo "ACCURACY=$accuracy" >> $GITHUB_ENV

      - name: Debug GITHUB_ENV
        run: |
          cat $GITHUB_ENV

      # - name: Evaluate and Redeploy
      #   if: success()
      #   run: |
      #     echo "Checking evaluation accuracy..."
      #     # Placeholder for actual accuracy retrieval logic
      #     ACCURACY=$(docker exec tensorflow_container python workspace/src/image-classification-continuous-x/get_accuracy.py)
      #     echo "Model accuracy: $ACCURACY"

      #     THRESHOLD=0.15
      #     if (( $(echo "$ACCURACY >= $THRESHOLD" | bc -l) )); then
      #       echo "Accuracy ($ACCURACY) meets or exceeds threshold ($THRESHOLD). Triggering redeployment."

      #       git config --local user.email "tin2294@gmail.com"
      #       git config --local user.name "Ting Ting"
      #       git tag -fa "redeploy" -m "Auto-redeploy from training workflow"
      #       git push origin redeploy
      #     else
      #       echo "Accuracy ($ACCURACY) does not meet threshold ($THRESHOLD). Skipping redeployment."
      #     fi