name: Train Model

on:
  push:
    branches:
      - main
      # force training for now
      # paths:
      #   - 'model_train.py'

jobs:
  train-evaluate:
    runs-on: self-hosted
    # runs-on: [self-hosted, gpu]
    env:
      DATASET_EXISTS: ''

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Manage Dataset Volume and Download
        id: manage_dataset
        run: |
          docker run -d --rm --name tensorflow_container \
            -v food11_data:/tmp/content/Food-11 \
            -w /workspace \
            tensorflow/tensorflow:latest-gpu tail -f /dev/null

          if docker exec tensorflow_container bash -c "[ -d '/tmp/content/Food-11' ] && [ \"\$(ls -A /tmp/content/Food-11)\" ]"; then
            echo "Volume 'food11_data' already contains data. Skipping download."
          else
            echo "Volume 'food11_data' is empty. Downloading dataset."

            docker exec tensorflow_container bash -c "
              set -e;
              echo 'Downloading and setting up dataset...';
              mkdir -p /tmp/content/Food-11 && \
              apt-get update && \
              pip3 install gdown && \
              gdown https://drive.google.com/uc?id=1dt3CD3ICdLbTf80sNJ25TPBDKu_qyCnq -O /tmp/content/Food-11/dataset.zip && \
              unzip /tmp/content/Food-11/dataset.zip -d /tmp/content/Food-11 && \
              echo 'Dataset downloaded and unzipped. Files included:' && \
              ls -la /tmp/content/Food-11;
            "
          fi

          docker exec tensorflow_container bash -c "
            apt-get update && apt-get install -y git;
            if [ -d 'workspace/src/image-classification-continuous-x' ]; then
              echo 'Repository already exists. Updating...';
              cd /workspace/image-classification-continuous-x && git pull origin main;
            else
              echo 'Cloning repository...';
              git clone https://github.com/tin2294/image-classification-continuous-x.git workspace/src/image-classification-continuous-x;
            fi
          "

      - name: Install Dependencies
        run: |
          docker exec tensorflow_container pip install -r workspace/src/image-classification-continuous-x/requirements_docker.txt

      - name: Run Training Script
        run: |
          docker exec tensorflow_container python workspace/src/image-classification-continuous-x/model_train.py

      - name: Stop Container
        run: |
          docker stop tensorflow_container

      - name: Display Evaluation Results
        run: |
          cat workspace/src/evaluation_metrics.txt || echo "Evaluation metrics not available"

      # - name: Parse Evaluation Metrics
      #   id: metrics
      #   run: |
      #     evaluation_accuracy=$(grep 'evaluation_accuracy' evaluation_metrics.txt | cut -d' ' -f2)
      #     echo "::set-output name=evaluation_accuracy::$evaluation_accuracy"
      #   continue-on-error: true

      # - name: Display Evaluation Accuracy
      #   run: |
      #     echo "Evaluation Accuracy is: ${{ steps.metrics.outputs.evaluation_accuracy }}"

      # - name: Redeploy if Accuracy Meets Threshold
      # # made it 0.2 for now to check workflow
      #   if: steps.metrics.outputs.evaluation_accuracy && steps.metrics.outputs.evaluation_accuracy >= 0.15
      #   run: |
      #     git config --local user.email "tin2294@gmail.com"
      #     git config --local user.name "Ting Ting"
      #     git tag -fa "redeploy" -m "Auto-redeploy from training workflow"
      #     git push origin redeploy
