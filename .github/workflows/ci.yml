name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check if model exists
      id: model_check
      run: |
        if [ -f saved_model/my_model.h5 ]; then
          echo "::set-output name=model_exists::true"
          echo "Model exists."
        else
          echo "::set-output name=model_exists::false"
          echo "Model does not exist."
        fi

    - name: Create dummy model file
      run: |
        mkdir -p saved_model  # Create the directory if it doesn't exist
        echo "This is a dummy model file." > saved_model/dummy_model2.h5
        echo "Dummy model file created."
  
    - name: Upload dummy model
      uses: actions/upload-artifact@v4
      with:
        name: dummy-model
        path: saved_model/dummy_model2.h5

    - name: List current content
      run: |
        echo "Listing current files:"
        ls

    - name: List saved models
      run: |
        echo "Listing saved models:"
        ls saved_model/

    - name: Print model existence check
      run: |
        MODEL_EXISTS="${{ steps.model_check.outputs.model_exists }}"
        echo "Model exists: $MODEL_EXISTS"

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u tin2294 --password-stdin

    # - name: Build Docker Image
    #   run: |
    #     docker build -t ghcr.io/tin2294/image-classification:latest .

    # - name: Push Docker Image
    #   run: |
    #     docker push ghcr.io/tin2294/image-classification:latest

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    #   working-directory: .

    # - name: Download dataset
    #   run: |
    #     mkdir -p content/Food-11
    #     gdown https://drive.google.com/uc?id=1dt3CD3ICdLbTf80sNJ25TPBDKu_qyCnq -O content/Food-11/dataset.zip
    #     unzip content/Food-11/dataset.zip -d content/Food-11
    #   working-directory: .

    # - name: Download model
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: model
    #   continue-on-error: true

    # - name: Check if model exists
    #   id: model_check
    #   run: |
    #     if [ -f saved_model/my_model.h5 ]; then
    #       echo "::set-output name=model_exists::true"
    #       echo "Model exists."
    #     else
    #       echo "::set-output name=model_exists::false"
    #       echo "Model does not exist."
    #     fi

    # - name: Train Model
    #   if: steps.model_check.outputs.model_exists == 'false'
    #   run: |
    #     echo "Model not found, proceeding with training..."
    #     python model.py
    #   working-directory: .

    # - name: Upload training history plot
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: training-history
    #     path: training_history.png

    # - name: Upload model
    #   if: steps.model_check.outputs.model_exists == 'false'
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: model
    #     path: saved_model/my_model.h5

    # - name: Commit and push plots to gh-pages
    #   run: |
    #     git config --local user.email "tin2294@gmail.com"
    #     git config --local user.name "Ting Ting"
    #     mkdir -p gh-pages
    #     cp training_history.png gh-pages/
    #     cd gh-pages
    #     git init
    #     git remote add origin https://github.com/tin2294/image-classification-continuous-x.git
    #     git checkout -b gh-pages
    #     git add training_history.png
    #     git commit -m "Add training history plot"
    #     git push --force origin gh-pages
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download dummy model artifact
      uses: actions/download-artifact@v4
      with:
        name: dummy_model2
        path: saved_model

    - name: List saved models
      run: |
        echo "Listing saved models:"
        ls saved_model/
      
    # - name: Download model
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: model

    # - name: Set up Python
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.8'

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    #   working-directory: .

    # - name: Run tests
    #   run: |
    #     pytest --maxfail=1 --disable-warnings -q

    # - name: Comment with training history plot URL
    #   uses: actions/github-script@v4
    #   with:
    #     script: |
    #       const plotUrl = `https://tin2294.github.io/image-classification-continuous-x/training_history.png`;
    #       const context = require('@actions/github').context;
    #       const issueComment = context.payload.pull_request ? context.payload.pull_request.number : context.issue.number;
    #       github.issues.createComment({
    #         ...context.repo,
    #         issue_number: issueComment,
    #         body: `Training history plot: ![Training History Plot](${plotUrl})`
    #       });
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
